rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /generationHistory/{entryId} {
      // Allow read if the user owns the document
      allow read: if request.auth != null && 
                   request.auth.uid == resource.data.userId;
      
      // Allow create if the user is authenticated and sets themselves as owner
      allow create: if request.auth != null && 
                     request.resource.data.userId == request.auth.uid &&
                     validateHistoryEntry(request.resource.data);
      
      // Allow update if user owns the document and isn't modifying critical fields
      allow update: if request.auth != null && 
                     resource.data.userId == request.auth.uid &&
                     request.resource.data.userId == request.auth.uid &&
                     request.resource.data.createdAt == resource.data.createdAt;
      
      // Allow delete if the user owns the document
      allow delete: if request.auth != null && 
                     resource.data.userId == request.auth.uid;
    }
    
    function validateHistoryEntry(data) {
      return data.keys().hasAll(['userId', 'imageUrl', 'videoUrl', 'config', 'createdAt', 'status']) &&
             data.userId is string &&
             data.imageUrl is string &&
             data.videoUrl is string &&
             data.status in ['completed', 'failed'] &&
             data.createdAt is timestamp;
    }
  }
}